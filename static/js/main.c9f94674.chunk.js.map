{"version":3,"sources":["components/card/Card.js","components/card-list/CardList.js","components/search-box/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","username","name","email","CardList","monsters","map","SearchBox","placeholder","handleSearch","type","onChange","App","handleChange","e","setState","searchField","target","value","state","axios","get","then","response","data","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAeeA,G,YAbF,SAACC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAKL,EAAMG,QAAQG,WAEvB,6BAAKN,EAAMG,QAAQI,OACnB,4BAAIP,EAAMG,QAAQK,aCGfC,G,MAVE,SAACT,GACd,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMU,SAASC,KAAI,SAACR,GACjB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCO3BQ,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,uBACIb,UAAU,SACVc,KAAK,SACLC,SAAUF,EACVD,YAAaA,MCqCVI,E,kDAvCX,aAAe,IAAD,8BACV,gBAcJC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IALP,E,gEASO,IAAD,OAChBI,IACKC,IAAI,8CACJC,MAAK,SAACC,GAAD,OAAc,EAAKR,SAAS,CAAEV,SAAUkB,EAASC,Y,+BAOrD,IAAD,EAC6BC,KAAKN,MAA/Bd,EADH,EACGA,SAAUW,EADb,EACaA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC7B,GACtC,OAAOA,EAAQI,KACV0B,cACAC,SAASb,EAAYY,kBAE9B,OACI,sBAAKhC,UAAU,MAAf,UACI,iDACA,cAAC,EAAD,CACIa,aAAcgB,KAAKZ,aACnBL,YAAY,oBAEhB,cAAC,EAAD,CAAUH,SAAUqB,W,GAlClBI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9f94674.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img\r\n                src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n                alt={props.monster.username}\r\n            />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import Card from \"../card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nconst CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\">\r\n            {props.monsters.map((monster) => {\r\n                return <Card key={monster.id} monster={monster} />;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./SearchBox.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleSearch }) => {\r\n    return (\r\n        <input\r\n            className=\"search\"\r\n            type=\"search\"\r\n            onChange={handleSearch}\r\n            placeholder={placeholder}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            monsters: [],\n            searchField: \"\",\n        };\n    }\n\n    componentDidMount() {\n        axios\n            .get(\"https://jsonplaceholder.typicode.com/users\")\n            .then((response) => this.setState({ monsters: response.data }));\n    }\n\n    handleChange = (e) => {\n        this.setState({ searchField: e.target.value });\n    };\n\n    render() {\n        const { monsters, searchField } = this.state;\n        const filteredMonsters = monsters.filter((monster) => {\n            return monster.name\n                .toLowerCase()\n                .includes(searchField.toLowerCase());\n        });\n        return (\n            <div className=\"App\">\n                <h1>Monster Rolodex</h1>\n                <SearchBox\n                    handleSearch={this.handleChange}\n                    placeholder=\"Search monsters\"\n                />\n                <CardList monsters={filteredMonsters} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}